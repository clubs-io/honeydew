import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { Footer, Spinner } from "flowbite-react";
import { api } from "~/utils/api";
import { useRouter } from "next/router";
import { useState } from "react";
import { BuildingOfficeIcon, CheckIcon } from "@heroicons/react/24/outline";
import Image from "next/image";

const Home: NextPage = () => {
  // const { isSignedIn } = useAuth();
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const { data: sessionData } = useSession();
  const router = useRouter();
  const [orgName, setOrgName] = useState("");
  const currentUserOrganization = api.user?.getUserOrganization.useQuery(sessionData?.user.id ? sessionData?.user.id : "");
  
  if (currentUserOrganization.data?.organizationId) {
    void router.push("/dashboard");
  }
  const createOrganization = api.organization?.createOrganization.useMutation({
    onSuccess: () => {
      void router.push("/dashboard")
    },
  });
  // const { data: secretMessage } = api.example.getSecretMessage.useQuery(
  //   undefined, // no input
  //   { enabled: sessionData?.user !== undefined },
  // );
  return (
    <>
      <Head>
        <title>HoneyDew</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      { sessionData ?
          <main className="flex min-h-screen ">
            <div className="w-2/5 bg-slate-200 flex flex-col items-start gap-8 pl-24 pt-72">
              <h1 className="text-3xl font-bold">HoneyDew</h1>
              <div className="flex gap-4">
                <div className="h-fit p-2 border-2 border-blue-600 rounded-full">
                  <CheckIcon className="w-8 h-8 text-blue-600" />
                </div>
                <div className="flex flex-col items-start">
                  <h1 className="font-bold">Logged in</h1>
                  <p>
                    {sessionData && <span>Logged in as {sessionData.user?.name} </span>}
                  </p>
                  <button
                    className="font-semibold text-blue-500 no-underline "
                    onClick={sessionData ? () => void signOut({ callbackUrl: process.env.NEXT_PUBLIC_URL }) : () => void signIn()}
                  >
                    {sessionData ? "Sign out" : "Sign in"}
                  </button>
                </div>
              </div>
              <div className="flex gap-4">
                <div className="p-2 border-2 border-gray-600 rounded-full">
                  <BuildingOfficeIcon className="w-8 h-8 text-gray-600" />
                </div>
                <div className="flex flex-col">
                  <h1 className="font-bold">Organization details</h1>
                  <p>Organization details</p>
                </div>
              </div>
            </div>
            <div className="w-3/5 container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
              <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
                <div className="" >
                  <h3 className="text-2xl font-medium">Organization Name</h3>
                  <form onSubmit={() => { createOrganization.mutate({ user_id: sessionData.user?.id, organization_name: orgName }) }}>
                    <input
                      value={orgName}
                      onChange={(e) => setOrgName(e.target.value)}
                      required
                      placeholder="Alpha Sigma Beta"
                      className="border p-4 rounded-lg w-full mt-8"
                    />
                    <button
                      className="mt-3 w-full text-white bg-blue-600 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800"
                    >
                      {/* Create Company Profile */}
                      Continue
                    </button>
                  </form>
                </div>
              </div>
            </div>
          </main>
          :
          <div className="flex flex-col items-center justify-center my-72">
            <p>
              Have an account? 
            </p>
            <button
              className="text-lg font-bold text-blue-500 no-underline "
              onClick={() => void signIn()}
            >
              {sessionData ? "Sign out" : "Sign in"}
            </button>
            
          </div>
      }
      <Footer container={true}>
        <Footer.Copyright
          href="#"
          by="HoneyDewâ„¢"
          year={2022}
        />
        <Footer.LinkGroup>
          <Footer.Link href="#">
            About
          </Footer.Link>
          <Footer.Link href="#">
            Privacy Policy
          </Footer.Link>
          <Footer.Link href="#">
            Licensing
          </Footer.Link>
          <Footer.Link href="#">
            Contact
          </Footer.Link>
        </Footer.LinkGroup>
      </Footer>
    </>
  );
};

export default Home;
